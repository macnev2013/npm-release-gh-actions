name: Release

on:
  pull_request:
    types:
      - closed
    branches:
      - main
jobs:

  Release:

    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        label: ${{ github.event.pull_request.labels.*.name }}

    steps:

      - if: startsWith(matrix.label, 'release:')
        name: Retrieving Release Type
        run: |
          release_type=`echo ${{matrix.label}} | awk -F':' '{print $NF}'`
          echo "RELEASE_TYPE=${release_type}" >> $GITHUB_ENV
          echo "Releasing: ${release_type}"

      - if: startsWith(matrix.label, 'release:')
        name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - if: startsWith(matrix.label, 'release:')
        name: Set Environment Variables
        run: |
          echo "BOTNAME=Smart Select bot ${GITHUB_REF_SLUG}" >> $GITHUB_ENV
          if [ ${GITHUB_REF_SLUG} == "main" ] ; then
            RELEASE_NAME="production" >> $GITHUB_ENV
          else
            RELEASE_NAME="${GITHUB_REF_SLUG}" >> $GITHUB_ENV
          fi

      - if: startsWith(matrix.label, 'release:')
        name: Checkout Code
        uses: actions/checkout@v2.4.0
        
      - if: startsWith(matrix.label, 'release:')
        name: Setup Github
        run: |
          git config --global user.email "bot@noreply.com"
          git config --global user.name "Release Bot"

      - if: startsWith(matrix.label, 'release:')
        name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ env.RELEASE_TYPE }}
          DRY_RUN: true
          
      - if: startsWith(matrix.label, 'release:')
        name: NPM Bump version
        run: |
          npm version ${{ steps.tag_version.outputs.new_tag }} --follow-tags -m "bump version: ${{ steps.tag_version.outputs.new_tag }}"
          git push origin main --tag
          echo "pushed tags and version"

      - if: startsWith(matrix.label, 'release:')
        name: Creating Github Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "index.js"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          generateReleaseNotes: true
          prerelease: false
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.changelog.outputs.changelog }}
